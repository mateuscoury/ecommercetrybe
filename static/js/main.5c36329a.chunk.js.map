{"version":3,"sources":["services/estado.js","components/ProductOnCart.jsx","components/CartPage.jsx","services/api.js","components/TopNavBar.jsx","components/CardProducts.jsx","components/Dropdown.jsx","components/ListagemDeProdutos.jsx","components/Search.jsx","components/MainPage.jsx","components/Stars.jsx","components/Review.jsx","components/ProductDetails.jsx","components/InforComprador.jsx","components/MetodoPagamento.jsx","components/Checkout.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","estado","ProductOnCart","this","props","product","changeQtd","thumbnail","title","amountToBuy","id","price","className","src","alt","data-testid","type","onClick","React","Component","CartPage","calculateTotalPrice","bind","productsOnCart","reduce","acc","curr","totalItems","totalPrice","Math","floor","to","length","map","key","renderCheckout","a","fetch","categories","json","catJson","getProductsFromCategoryAndQuery","categoryId","query","data","TopNavBar","cartSize","CardProducts","addCart","freeShipping","shipping","free_shipping","pathname","state","Dropdown","onChange","name","value","ListagemDeProdutos","products","Search","onClickInput","onSubmit","MainPage","onclick","Stars","clickedStars","aOc","Review","review","email","stars","textArea","ProductDetails","add","sub","handleChange","sendReview","availableQtd","location","available_quantity","quantidade","available","disable","reviews","getReviews","target","setState","window","localStorage","getItem","JSON","parse","array","setItem","stringify","newQtd","n","newArray","i","newReview","push","saveReviews","attributes","condicao","value_name","disabled","action","placeholder","currentId","filteredReviews","filter","index","renderProductSession","renderReviewSession","renderReviewList","InforComprador","arry","MetodoPagmento","htmlFor","defaultChecked","Checkout","resumo","getFromLocalStorage","result","App","buscaDeProdutos","buscaProdutosInput","getFromLocalStorageTotal","api","then","envet","preventDefault","filterProducts","currentLocal","sort","b","total","input","results","obj","amount","includes","local","saveOnLocalStorage","old","num","idToChange","newProductsOnCart","itemToChange","find","indexOf","newTotalItems","splice","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c36329a.chunk.js","sourcesContent":["const estado = [\n  'Acre',\n  'Alagoas',\n  'Amapá',\n  'Amazonas',\n  'Bahia',\n  'Ceará',\n  'Distrito Federal',\n  'Espírito Santo',\n  'Goiás',\n  'Maranhão',\n  'Mato Grosso',\n  'Mato Grosso do Sul',\n  'Minas Gerais',\n  'Pará',\n  'Paraíba',\n  'Paraná',\n  'Pernambuco',\n  'Piauí',\n  'Rio de Janeiro',\n  'Rio Grande do Norte',\n  'Rio Grande do Sul',\n  'Rondônia',\n  'Roraima',\n  'Santa Catarina',\n  'São Paulo',\n  'Sergipe',\n  'Tocantins',\n];\n\nmodule.exports = { estado };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ProductOnCart.css';\n\nclass ProductOnCart extends React.Component {\n  render() {\n    const { product, changeQtd } = this.props;\n    const { thumbnail, title, amountToBuy, id, price } = product;\n    const ONE = 1;\n    const NEG = -1;\n    return (\n      <div className=\"productOnCart\">\n        <div className=\"cartImgDiv\">\n          <img src={ thumbnail } alt=\"Thumb\" />\n        </div>\n        <h4 data-testid=\"shopping-cart-product-name\">\n          { title }\n        </h4>\n        <p className=\"cartPrice\">{ `R$ ${price}`}</p>\n        <div className=\"quantidadeDiv\">\n          <button\n            type=\"button\"\n            onClick={ () => changeQtd(NEG, id) }\n            data-testid=\"product-decrease-quantity\"\n          >\n            -\n          </button>\n          <div data-testid=\"shopping-cart-product-quantity\">\n            { +amountToBuy }\n          </div>\n          <button\n            type=\"button\"\n            onClick={ () => changeQtd(ONE, id) }\n            data-testid=\"product-increase-quantity\"\n          >\n            +\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductOnCart.propTypes = {\n  product: PropTypes.objectOf(PropTypes.any).isRequired,\n  changeQtd: PropTypes.func.isRequired,\n};\n\nexport default ProductOnCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProductOnCart from './ProductOnCart';\nimport './CartPage.css';\n\nclass CartPage extends React.Component {\n  constructor() {\n    super();\n    this.calculateTotalPrice = this.calculateTotalPrice.bind(this);\n  }\n\n  calculateTotalPrice() {\n    const { productsOnCart } = this.props;\n    const totalPrice = productsOnCart.reduce((acc, curr) => {\n      acc += (curr.amountToBuy * curr.price);\n      return acc;\n    }, 0);\n    return totalPrice;\n  }\n\n  renderCheckout() {\n    const { totalItems } = this.props;\n    let totalPrice = this.calculateTotalPrice();\n    totalPrice = Math.floor(totalPrice * 100) / 100;\n    return (\n      <div className=\"totalPrice\">\n        <h1>Resumo da Compra</h1>\n        <hr />\n        <table>\n          <tbody>\n            <tr>\n              <td className=\"leftSide\">Qtd de itens</td>\n              <td className=\"rightSide\">{ totalItems }</td>\n            </tr>\n            <tr>\n              <td className=\"leftSide\">Subtotal</td>\n              <td className=\"rightSide\">{ `R$ ${totalPrice}`}</td>\n            </tr>\n            <tr>\n              <td className=\"leftSide\">Descontos</td>\n              <td className=\"rightSide\">R$0</td>\n            </tr>\n          </tbody>\n        </table>\n        <hr />\n        <table>\n          <tbody>\n            <tr>\n              <td className=\"leftSide\">TOTAL</td>\n              <td className=\"rightSide\">{ `R$ ${totalPrice}`}</td>\n            </tr>\n          </tbody>\n        </table>\n        <Link to=\"/checkout\">\n          <button type=\"button\" data-testid=\"checkout-products\">CHECKOUT</button>\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    const { productsOnCart, changeQtd } = this.props;\n    if (productsOnCart.length === 0) {\n      return (\n        <p\n          className=\"emptyCart\"\n          data-testid=\"shopping-cart-empty-message\"\n        >\n          Seu carrinho está vazio\n        </p>);\n    }\n    return (\n      <div className=\"mainCartPage\">\n        <div className=\"listOfProducts\">\n          { productsOnCart.map((product) => (<ProductOnCart\n            key={ product.id }\n            product={ product }\n            changeQtd={ changeQtd }\n          />))}\n        </div>\n        { this.renderCheckout()}\n      </div>\n    );\n  }\n}\n\nCartPage.propTypes = {\n  productsOnCart: PropTypes.arrayOf(PropTypes.any).isRequired,\n  changeQtd: PropTypes.func.isRequired,\n  totalItems: PropTypes.number.isRequired,\n};\n\nexport default CartPage;\n","export async function getCategories() {\n  const categories = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const catJson = await categories.json();\n  return catJson;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const data = await fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`);\n  return data.json();\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FiShoppingCart } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport './TopNavBar.css';\n\nclass TopNavBar extends React.Component {\n  render() {\n    const { cartSize } = this.props;\n    return (\n      <div className=\"topNavBar\">\n        <Link className=\"cartLogo\" to=\"/\">YUB.COM </Link>\n        <Link className=\"cartIcon\" to=\"/shoppingCart\" data-testid=\"shopping-cart-button\">\n          <FiShoppingCart />\n          (\n          <div data-testid=\"shopping-cart-size\">\n            { cartSize }\n          </div>\n          )\n        </Link>\n      </div>\n    );\n  }\n}\n\nTopNavBar.propTypes = {\n  cartSize: PropTypes.number.isRequired,\n};\n\nexport default TopNavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './CardProducts.css';\n\nclass CardProducts extends React.Component {\n  render() {\n    const { product, addCart } = this.props;\n    const { thumbnail, price, title, id, shipping } = product;\n    const { free_shipping: freeShipping } = shipping;\n\n    return (\n      <div className=\"productCard\" data-testid=\"product\">\n        <div className=\"imgDiv\">\n          <img src={ thumbnail } alt=\"Thumb\" />\n        </div>\n        <div className=\"textDiv\">\n          <p>\n            R$\n            { price }\n          </p>\n          <h4 data-testid=\"product-detail-name\">{ title }</h4>\n          {freeShipping === true && <p data-testid=\"free-shipping\">Frete Grátis</p>}\n          <Link\n            to={ {\n              pathname: `/${id}`,\n              state: { product } } }\n            data-testid=\"product-detail-link\"\n          >\n            More Info\n          </Link>\n          <button\n            data-testid=\"product-add-to-cart\"\n            onClick={ () => addCart(product) }\n            type=\"button\"\n          >\n            Adicionar ao carrinho\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCardProducts.propTypes = {\n  product: PropTypes.shape({\n    thumbnail: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    shipping: PropTypes.shape({\n      free_shipping: PropTypes.bool,\n    }).isRequired,\n  }).isRequired,\n  addCart: PropTypes.func.isRequired,\n};\n\nexport default CardProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Dropdown extends React.Component {\n  render() {\n    const { onChange } = this.props;\n    return (\n      <div>\n        <select onChange={ onChange } name=\"select\">\n          <option value=\"\"> </option>\n          <option value=\"Menor\" name=\"Menor\">Menor Preço</option>\n          <option value=\"Maior\" name=\"Maior\">Maior Preço</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nDropdown.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CardProducts from './CardProducts';\nimport Dropdown from './Dropdown';\n\nclass ListagemDeProdutos extends React.Component {\n  render() {\n    const { products, addCart, onChange } = this.props;\n\n    if (products.length === 0) {\n      return (\n        <div className=\"zeroProducts\">Nenhum produto foi encontrado</div>\n      );\n    }\n\n    return (\n      <div className=\"cardsDiv\">\n        <Dropdown onChange={ onChange } />\n        { products.map((product) => (<CardProducts\n          key={ product.id }\n          product={ product }\n          addCart={ addCart }\n        />)) }\n      </div>\n    );\n  }\n}\n\nListagemDeProdutos.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.any).isRequired,\n  addCart: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ListagemDeProdutos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport './Search.css';\n\nclass Search extends React.Component {\n  render() {\n    const { onChange, onClickInput } = this.props;\n    return (\n      <section>\n        <form onSubmit={ onChange }>\n          <div className=\"inputDiv\">\n            <input\n              type=\"search\"\n              name=\"input\"\n              data-testid=\"query-input\"\n              onChange={ onChange }\n            />\n            <button\n              type=\"button\"\n              className=\"searchIcon\"\n              data-testid=\"query-button\"\n              onClick={ onClickInput }\n            >\n              <AiOutlineSearch />\n            </button>\n          </div>\n        </form>\n        <p data-testid=\"home-initial-message\" className=\"searchText\">\n          Digite algum termo de pesquisa ou escolha uma categoria.\n        </p>\n      </section>\n    );\n  }\n}\n\nSearch.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onClickInput: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListagemDeProdutos from './ListagemDeProdutos';\nimport Search from './Search';\n\nclass MainPage extends React.Component {\n  render() {\n    const { categories, products, onclick, addCart, onChange, onClickInput } = this.props;\n    return (\n      <div className=\"mainPage\">\n        <Search onChange={ onChange } onClickInput={ onClickInput } />\n        <div className=\"categoriesList\">\n          { categories.map(({ name, id }) => (\n            <button\n              type=\"button\"\n              key={ name }\n              onClick={ () => onclick(id) }\n              data-testid=\"category\"\n\n            >\n              {name}\n            </button>\n          ))}\n        </div>\n        <ListagemDeProdutos\n          products={ products }\n          addCart={ addCart }\n          onChange={ onChange }\n        />\n      </div>\n    );\n  }\n}\n\nMainPage.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.any).isRequired,\n  products: PropTypes.arrayOf(PropTypes.any).isRequired,\n  onclick: PropTypes.func.isRequired,\n  addCart: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClickInput: PropTypes.func.isRequired,\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AiFillStar } from 'react-icons/ai';\nimport './Stars.css';\n\nclass Stars extends React.Component {\n  render() {\n    const one = 1;\n    const two = 2;\n    const three = 3;\n    const four = 4;\n    const five = 5;\n    const { clickedStars, aOc } = this.props;\n    return (\n      <div className=\"stars\">\n        <button type=\"button\" onClick={ () => clickedStars(one) }>\n          <AiFillStar className={ aOc[0] ? 'clicked' : 'notClicked' } />\n        </button>\n        <button type=\"button\" onClick={ () => clickedStars(two) }>\n          <AiFillStar className={ aOc[1] ? 'clicked' : 'notClicked' } />\n        </button>\n        <button type=\"button\" onClick={ () => clickedStars(three) }>\n          <AiFillStar className={ aOc[2] ? 'clicked' : 'notClicked' } />\n        </button>\n        <button type=\"button\" onClick={ () => clickedStars(four) }>\n          <AiFillStar className={ aOc[3] ? 'clicked' : 'notClicked' } />\n        </button>\n        <button type=\"button\" onClick={ () => clickedStars(five) }>\n          <AiFillStar className={ aOc[4] ? 'clicked' : 'notClicked' } />\n        </button>\n      </div>\n    );\n  }\n}\n\nStars.propTypes = {\n  clickedStars: PropTypes.func.isRequired,\n  aOc: PropTypes.arrayOf(PropTypes.bool).isRequired,\n};\n\nexport default Stars;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Review.css';\n\nclass Review extends React.Component {\n  render() {\n    const { review } = this.props;\n    return (\n      <div className=\"reviewItem\">\n        <p>{review.email}</p>\n        <p>{ review.stars}</p>\n        <p>{review.textArea}</p>\n      </div>\n    );\n  }\n}\n\nReview.propTypes = {\n  review: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    textArea: PropTypes.string.isRequired,\n    stars: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Review;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stars from './Stars';\nimport Review from './Review';\nimport './ProductDetails.css';\n\nclass ProductDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.add = this.add.bind(this);\n    this.sub = this.sub.bind(this);\n    this.clickedStars = this.clickedStars.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendReview = this.sendReview.bind(this);\n    const { location: { state: {\n      product: { available_quantity: availableQtd } } } } = props;\n    this.state = {\n      quantidade: 1,\n      available: availableQtd,\n      disable: false,\n      aOc: [false, false, false, false, false],\n      stars: 0,\n      email: '',\n      textArea: '',\n      reviews: this.getReviews(),\n    };\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState(() => ({ [name]: value }));\n  }\n\n  getReviews() {\n    let reviews = window.localStorage.getItem('reviews');\n    if (reviews === null) {\n      reviews = '[]';\n    }\n    return JSON.parse(reviews);\n  }\n\n  saveReviews(array = []) {\n    window.localStorage.setItem('reviews', JSON.stringify(array));\n  }\n\n  add() {\n    const { available, quantidade } = this.state;\n    let newQtd = quantidade + 1;\n    if (newQtd > available) {\n      newQtd = available;\n    }\n    this.setState(() => ({ quantidade: newQtd, disable: false }));\n  }\n\n  sub() {\n    const { quantidade } = this.state;\n    let newQtd = quantidade - 1;\n    if (newQtd <= 0) {\n      newQtd = 0;\n      this.setState(() => ({ disable: true }));\n    }\n    this.setState(() => ({ quantidade: newQtd }));\n  }\n\n  clickedStars(n = 0) {\n    const newArray = [false, false, false, false, false];\n    for (let i = 0; i < n; i += 1) {\n      newArray[i] = true;\n    }\n    this.setState(() => ({ aOc: newArray, stars: n }));\n  }\n\n  sendReview() {\n    const { location: { state: { product } } } = this.props;\n    const { id } = product;\n    const { email, stars, textArea } = this.state;\n    const newReview = { id, email, stars, textArea };\n    const reviews = this.getReviews();\n    reviews.push(newReview);\n    this.saveReviews(reviews);\n    this.setState(() => ({ reviews }));\n  }\n\n  renderProductSession() {\n    const { location: { state: { product } } } = this.props;\n    const { addCart } = this.props;\n    const { title, thumbnail, price, attributes,\n      shipping: { free_shipping: freeShipping },\n      available_quantity: availableQtd } = product;\n    const { value_name: condicao } = attributes[1];\n    const { quantidade, disable } = this.state;\n    return (\n      <div className=\"detailDiv\">\n        <div className=\"detailProduct\">\n          <div className=\"detailImg\">\n            <img src={ thumbnail } alt=\"item\" />\n          </div>\n          <div className=\"detailText\">\n            <h3>Informações</h3>\n            {freeShipping === true && <h1 data-testid=\"free-shipping\">Free Shipping</h1>}\n            <p className=\"detailPrice\">{`R$ ${price}`}</p>\n            <h1 data-testid=\"product-detail-name\">{title}</h1>\n            <p className=\"detailInfo\">{`Quantidade disponivel: ${availableQtd}`}</p>\n            <p className=\"detailInfo\">{`Condição do Produto: ${condicao}`}</p>\n            <div className=\"addAndSub\">\n              <button type=\"button\" onClick={ this.sub }>-</button>\n              <div>{quantidade}</div>\n              <button type=\"button\" onClick={ this.add }>+</button>\n            </div>\n            <p className=\"detailInfo\">Quantidade</p>\n            <button\n              onClick={ () => addCart(product, quantidade) }\n              disabled={ disable }\n              className=\"addToCartButton\"\n              type=\"button\"\n              data-testid=\"product-detail-add-to-cart\"\n            >\n              Adicionar ao carrinho\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderReviewSession() {\n    const { aOc, email, textArea } = this.state;\n    return (\n      <div className=\"detailReview\">\n        <p>Avaliações</p>\n        <Stars clickedStars={ this.clickedStars } aOc={ aOc } />\n        <form action=\"#\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"Email\"\n            onChange={ this.handleChange }\n            value={ email }\n          />\n          <textarea\n            type=\"text\"\n            name=\"textArea\"\n            placeholder=\"Avaliação\"\n            onChange={ this.handleChange }\n            data-testid=\"product-detail-evaluation\"\n            value={ textArea }\n          />\n          <button\n            className=\"submitBtn\"\n            type=\"button\"\n            onClick={ this.sendReview }\n          >\n            Enviar\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  renderReviewList() {\n    const { reviews } = this.state;\n    const { location: { state: { product } } } = this.props;\n    const { id: currentId } = product;\n    const filteredReviews = reviews.filter(({ id }) => id === currentId);\n\n    return (\n      <div className=\"reviewList\">\n        { filteredReviews.map((review, index) => (<Review\n          key={ index }\n          review={ review }\n        />))}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"detailDiv\">\n        {this.renderProductSession()}\n        {this.renderReviewSession()}\n        {this.renderReviewList()}\n      </div>\n    );\n  }\n}\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      product: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        attributes: PropTypes.arrayOf(PropTypes.any).isRequired,\n        available_quantity: PropTypes.number.isRequired,\n        value_name: PropTypes.string,\n        shipping: PropTypes.shape({\n          free_shipping: PropTypes.bool.isRequired,\n        }),\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n  addCart: PropTypes.func.isRequired,\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport './InforComprador.css';\nimport { estado } from '../services/estado';\n\nclass InforComprador extends React.Component {\n  render() {\n    return (\n      <fieldset className=\"inputsDiv\">\n        <legend>Informações do Comprador</legend>\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Nome Completo\"\n            data-testid=\"checkout-fullname\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"CPF\"\n            data-testid=\"checkout-cpf\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Email\"\n            data-testid=\"checkout-email\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Telefone\"\n            data-testid=\"checkout-phone\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"CEP\"\n            data-testid=\"checkout-cep\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Endereço\"\n            data-testid=\"checkout-address\"\n          />\n          <input type=\"text\" placeholder=\"Complemento\" />\n          <input type=\"text\" placeholder=\"Endereço\" />\n          <input type=\"text\" placeholder=\"Número\" />\n          <select>\n            { estado.map((arry, i) => (\n              <option key={ i }>{ arry }</option>\n            ))}\n          </select>\n        </form>\n      </fieldset>\n    );\n  }\n}\n\nexport default InforComprador;\n","import React from 'react';\nimport { AiOutlineBarcode, AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { FaCcVisa, FaCcMastercard } from 'react-icons/fa';\n\nimport './MetodoPagmento.css';\n\nclass MetodoPagmento extends React.Component {\n  render() {\n    return (\n      <fieldset className=\"metodosDiv\">\n        <legend>Método de pagamento</legend>\n\n        <label htmlFor=\"boleto\">\n          <input\n            type=\"radio\"\n            value=\"boleto\"\n            id=\"boleto\"\n            name=\"pagamento\"\n            defaultChecked\n          />\n          <AiOutlineBarcode />\n          <p>Boleto</p>\n        </label>\n        <label htmlFor=\"visa\">\n          <input type=\"radio\" value=\"visa\" id=\"visa\" name=\"pagamento\" />\n\n          <FaCcVisa />\n          <p>Visa</p>\n        </label>\n        <label htmlFor=\"masterCard\">\n          <input type=\"radio\" value=\"MasterCard\" id=\"masterCard\" name=\"pagamento\" />\n\n          <FaCcMastercard />\n          <p>MasterCard</p>\n        </label>\n        <label htmlFor=\"elo\">\n          <input type=\"radio\" value=\"Elo\" id=\"elo\" name=\"pagamento\" />\n          <AiOutlineLoading3Quarters />\n          Elo\n        </label>\n      </fieldset>\n    );\n  }\n}\n\nexport default MetodoPagmento;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InforComprador from './InforComprador';\nimport MetodoPagmento from './MetodoPagamento';\n\nimport './Checkout.css';\n\nclass Checkout extends React.Component {\n  render() {\n    const { getFromLocalStorage } = this.props;\n    const resumo = getFromLocalStorage();\n    let result = resumo.reduce((acc, curr) => {\n      acc += (curr.amountToBuy * curr.price);\n      return acc;\n    }, 0);\n    result = Math.floor(result * 100) / 100;\n    return (\n      <div className=\"checkoutDiv\">\n        <fieldset className=\"resumoItemsDiv\">\n          <legend>Revise seus Produtos</legend>\n\n          {resumo.map((arry) => (\n            <div key={ arry.id } className=\"resumoCard\">\n              <img src={ arry.thumbnail } alt=\"img\" />\n              <p>{ arry.title }</p>\n              <p>{ `Quantidade: ${arry.amountToBuy}`}</p>\n              <p>{ `Preço: R$${arry.price * arry.amountToBuy}` }</p>\n            </div>\n          ))}\n          <h1>\n            Total R$\n            { result }\n          </h1>\n\n        </fieldset>\n        <div className=\"pagamento\">\n          <InforComprador />\n          <MetodoPagmento />\n        </div>\n        <button type=\"button\" className=\"checkoutBtn\">Finalizar Compra</button>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  getFromLocalStorage: PropTypes.func.isRequired,\n};\n\nexport default Checkout;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport CartPage from './components/CartPage';\nimport './App.css';\nimport './services/api';\nimport TopNavBar from './components/TopNavBar';\nimport * as api from './services/api';\nimport MainPage from './components/MainPage';\nimport ProductDetails from './components/ProductDetails';\nimport Checkout from './components/Checkout';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.buscaDeProdutos = this.buscaDeProdutos.bind(this);\n    this.buscaProdutosInput = this.buscaProdutosInput.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addCart = this.addCart.bind(this);\n    this.changeQtd = this.changeQtd.bind(this);\n    this.state = {\n      categories: [],\n      products: [],\n      productsOnCart: this.getFromLocalStorage(),\n      totalItems: this.getFromLocalStorageTotal(),\n    };\n  }\n\n  componentDidMount() {\n    api.getCategories().then((result) => {\n      this.setState(() => ({ categories: result }));\n    });\n  }\n\n  handleChange(envet) {\n    envet.preventDefault();\n    const { name, value } = envet.target;\n    if (name === 'select') {\n      this.filterProducts(value);\n    }\n    this.setState({ [name]: value });\n  }\n\n  getFromLocalStorageTotal() {\n    let currentLocal = window.localStorage.getItem('total');\n    if (currentLocal === null) {\n      currentLocal = 0;\n    }\n    return +currentLocal;\n  }\n\n  getFromLocalStorage() {\n    let currentLocal = window.localStorage.getItem('cart');\n    currentLocal = JSON.parse(currentLocal);\n    if (currentLocal === null) {\n      currentLocal = [];\n    }\n    return currentLocal;\n  }\n\n  filterProducts(value) {\n    const { products } = this.state;\n    if (value === 'Menor') {\n      products.sort((a, b) => a.price - b.price);\n    } else {\n      products.sort((a, b) => b.price - a.price);\n    }\n  }\n\n  saveOnLocalStorage(array, total) {\n    array = JSON.stringify(array);\n    window.localStorage.setItem('total', total);\n    window.localStorage.setItem('cart', array);\n  }\n\n  buscaDeProdutos(id) {\n    const { input } = this.state;\n    api.getProductsFromCategoryAndQuery(id, input).then((result) => {\n      this.setState(() => ({ products: result.results }));\n    });\n  }\n\n  buscaProdutosInput() {\n    const { input } = this.state;\n    api.getProductsFromCategoryAndQuery('', input)\n      .then(({ results }) => this.setState({\n        products: results,\n      }));\n  }\n\n  addCart(obj, amount = 1) {\n    const { productsOnCart, totalItems } = this.state;\n    const { id } = obj;\n    if (!productsOnCart.includes(obj)) {\n      obj.amountToBuy = amount;\n      const local = this.getFromLocalStorage();\n      local.push(obj);\n      this.saveOnLocalStorage(local, (totalItems + amount));\n      this.setState((old) => ({\n        productsOnCart: [...old.productsOnCart, obj],\n        totalItems: (old.totalItems + amount),\n      }));\n    } else {\n      this.changeQtd(amount, id);\n    }\n  }\n\n  changeQtd(num, idToChange) {\n    const { productsOnCart, totalItems } = this.state;\n    const newProductsOnCart = [...productsOnCart];\n    const itemToChange = newProductsOnCart.find(({ id }) => id === idToChange);\n    const { available_quantity: availableQtd } = itemToChange;\n    const index = newProductsOnCart.indexOf(itemToChange);\n    itemToChange.amountToBuy += num;\n    let newTotalItems = totalItems + num;\n    if (itemToChange.amountToBuy === 0) {\n      newProductsOnCart.splice(index, 1);\n    }\n    if (itemToChange.amountToBuy > availableQtd) {\n      itemToChange.amountToBuy = availableQtd;\n      newTotalItems -= 1;\n    }\n    this.saveOnLocalStorage(newProductsOnCart, newTotalItems);\n    this.setState(() => (\n      {\n        productsOnCart: newProductsOnCart,\n        totalItems: newTotalItems,\n      }));\n  }\n\n  render() {\n    const { categories, products, productsOnCart, totalItems } = this.state;\n    return (\n      <HashRouter>\n        <TopNavBar cartSize={totalItems} />\n        <Switch>\n          <Route\n            path=\"/shoppingCart\"\n            render={(props) => (<CartPage\n              {...props}\n              productsOnCart={productsOnCart}\n              changeQtd={this.changeQtd}\n              totalItems={totalItems}\n            />)}\n          />\n          <Route\n            path=\"/checkout\"\n            render={(props) => (<Checkout\n              {...props}\n              getFromLocalStorage={this.getFromLocalStorage}\n            />)}\n          />\n          <Route\n            path=\"/:id\"\n            render={(props) => <ProductDetails {...props} addCart={this.addCart} />}\n          />\n          <Route\n            path=\"/\"\n            render={(props) => (<MainPage\n              {...props}\n              categories={categories}\n              products={products}\n              onclick={this.buscaDeProdutos}\n              addCart={this.addCart}\n              onChange={this.handleChange}\n              onClickInput={this.buscaProdutosInput}\n            />)}\n          />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  \n\n    <App />\n  ,\n  \n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}